name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_15.4.app/Contents/Developer
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Install SwiftFormat
      run: brew install swiftformat
      
    - name: SwiftLint
      run: swiftlint --strict
      
    - name: SwiftFormat Check
      run: swiftformat --lint .

  tuist-generation:
    name: Tuist Generation Check
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_15.4.app/Contents/Developer
      
    - name: Cache Tuist
      uses: actions/cache@v4
      with:
        path: ~/.tuist
        key: tuist-${{ runner.os }}-${{ hashFiles('**/Project.swift', '**/Workspace.swift', 'Tuist/**') }}
        restore-keys: |
          tuist-${{ runner.os }}-
      
    - name: Install Tuist
      run: curl -Ls https://install.tuist.io | bash
      
    - name: Tuist Install
      run: tuist install
      
    - name: Tuist Generate
      run: tuist generate
      
    - name: Check for uncommitted changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "❌ Uncommitted changes detected after tuist generate:"
          git status --porcelain
          echo "Run 'tuist generate' and commit the changes."
          exit 1
        else
          echo "✅ No uncommitted changes detected."
        fi

  test:
    name: Test
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_15.4.app/Contents/Developer
      
    - name: Cache Tuist
      uses: actions/cache@v4
      with:
        path: ~/.tuist
        key: tuist-${{ runner.os }}-${{ hashFiles('**/Project.swift', '**/Workspace.swift', 'Tuist/**') }}
        restore-keys: |
          tuist-${{ runner.os }}-
      
    - name: Install Tuist
      run: curl -Ls https://install.tuist.io | bash
      
    - name: Tuist Install
      run: tuist install
      
    - name: Tuist Generate
      run: tuist generate
      
    - name: Build
      run: |
        xcodebuild build \
          -workspace App.xcworkspace \
          -scheme App \
          -destination 'platform=iOS Simulator,name=iPhone 15'
      
    - name: Test
      run: |
        xcodebuild test \
          -workspace App.xcworkspace \
          -scheme App \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          -resultBundlePath TestResults.xcresult
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: TestResults.xcresult